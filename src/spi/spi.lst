                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.0 #14620 (MINGW32)
                                      4 ;--------------------------------------------------------
                                      5 	.module spi
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _CY
                                     12 	.globl _AC
                                     13 	.globl _F0
                                     14 	.globl _RS1
                                     15 	.globl _RS0
                                     16 	.globl _OV
                                     17 	.globl _F1
                                     18 	.globl _P
                                     19 	.globl _PS
                                     20 	.globl _PT1
                                     21 	.globl _PX1
                                     22 	.globl _PT0
                                     23 	.globl _PX0
                                     24 	.globl _RD
                                     25 	.globl _WR
                                     26 	.globl _T1
                                     27 	.globl _T0
                                     28 	.globl _INT1
                                     29 	.globl _INT0
                                     30 	.globl _TXD
                                     31 	.globl _RXD
                                     32 	.globl _P3_7
                                     33 	.globl _P3_6
                                     34 	.globl _P3_5
                                     35 	.globl _P3_4
                                     36 	.globl _P3_3
                                     37 	.globl _P3_2
                                     38 	.globl _P3_1
                                     39 	.globl _P3_0
                                     40 	.globl _EA
                                     41 	.globl _ES
                                     42 	.globl _ET1
                                     43 	.globl _EX1
                                     44 	.globl _ET0
                                     45 	.globl _EX0
                                     46 	.globl _P2_7
                                     47 	.globl _P2_6
                                     48 	.globl _P2_5
                                     49 	.globl _P2_4
                                     50 	.globl _P2_3
                                     51 	.globl _P2_2
                                     52 	.globl _P2_1
                                     53 	.globl _P2_0
                                     54 	.globl _SM0
                                     55 	.globl _SM1
                                     56 	.globl _SM2
                                     57 	.globl _REN
                                     58 	.globl _TB8
                                     59 	.globl _RB8
                                     60 	.globl _TI
                                     61 	.globl _RI
                                     62 	.globl _P1_7
                                     63 	.globl _P1_6
                                     64 	.globl _P1_5
                                     65 	.globl _P1_4
                                     66 	.globl _P1_3
                                     67 	.globl _P1_2
                                     68 	.globl _P1_1
                                     69 	.globl _P1_0
                                     70 	.globl _TF1
                                     71 	.globl _TR1
                                     72 	.globl _TF0
                                     73 	.globl _TR0
                                     74 	.globl _IE1
                                     75 	.globl _IT1
                                     76 	.globl _IE0
                                     77 	.globl _IT0
                                     78 	.globl _P0_7
                                     79 	.globl _P0_6
                                     80 	.globl _P0_5
                                     81 	.globl _P0_4
                                     82 	.globl _P0_3
                                     83 	.globl _P0_2
                                     84 	.globl _P0_1
                                     85 	.globl _P0_0
                                     86 	.globl _B
                                     87 	.globl _ACC
                                     88 	.globl _PSW
                                     89 	.globl _IP
                                     90 	.globl _P3
                                     91 	.globl _IE
                                     92 	.globl _P2
                                     93 	.globl _SBUF
                                     94 	.globl _SCON
                                     95 	.globl _P1
                                     96 	.globl _TH1
                                     97 	.globl _TH0
                                     98 	.globl _TL1
                                     99 	.globl _TL0
                                    100 	.globl _TMOD
                                    101 	.globl _TCON
                                    102 	.globl _PCON
                                    103 	.globl _DPH
                                    104 	.globl _DPL
                                    105 	.globl _SP
                                    106 	.globl _P0
                                    107 	.globl _delay
                                    108 	.globl _begin
                                    109 	.globl _end
                                    110 	.globl _asm_shift_in_2
                                    111 	.globl _asm_shift_in
                                    112 	.globl _asm_shift_out_2
                                    113 	.globl _asm_shift_out
                                    114 	.globl _shift_in
                                    115 	.globl _shift_out
                                    116 ;--------------------------------------------------------
                                    117 ; special function registers
                                    118 ;--------------------------------------------------------
                                    119 	.area RSEG    (ABS,DATA)
      000000                        120 	.org 0x0000
                           000080   121 _P0	=	0x0080
                           000081   122 _SP	=	0x0081
                           000082   123 _DPL	=	0x0082
                           000083   124 _DPH	=	0x0083
                           000087   125 _PCON	=	0x0087
                           000088   126 _TCON	=	0x0088
                           000089   127 _TMOD	=	0x0089
                           00008A   128 _TL0	=	0x008a
                           00008B   129 _TL1	=	0x008b
                           00008C   130 _TH0	=	0x008c
                           00008D   131 _TH1	=	0x008d
                           000090   132 _P1	=	0x0090
                           000098   133 _SCON	=	0x0098
                           000099   134 _SBUF	=	0x0099
                           0000A0   135 _P2	=	0x00a0
                           0000A8   136 _IE	=	0x00a8
                           0000B0   137 _P3	=	0x00b0
                           0000B8   138 _IP	=	0x00b8
                           0000D0   139 _PSW	=	0x00d0
                           0000E0   140 _ACC	=	0x00e0
                           0000F0   141 _B	=	0x00f0
                                    142 ;--------------------------------------------------------
                                    143 ; special function bits
                                    144 ;--------------------------------------------------------
                                    145 	.area RSEG    (ABS,DATA)
      000000                        146 	.org 0x0000
                           000080   147 _P0_0	=	0x0080
                           000081   148 _P0_1	=	0x0081
                           000082   149 _P0_2	=	0x0082
                           000083   150 _P0_3	=	0x0083
                           000084   151 _P0_4	=	0x0084
                           000085   152 _P0_5	=	0x0085
                           000086   153 _P0_6	=	0x0086
                           000087   154 _P0_7	=	0x0087
                           000088   155 _IT0	=	0x0088
                           000089   156 _IE0	=	0x0089
                           00008A   157 _IT1	=	0x008a
                           00008B   158 _IE1	=	0x008b
                           00008C   159 _TR0	=	0x008c
                           00008D   160 _TF0	=	0x008d
                           00008E   161 _TR1	=	0x008e
                           00008F   162 _TF1	=	0x008f
                           000090   163 _P1_0	=	0x0090
                           000091   164 _P1_1	=	0x0091
                           000092   165 _P1_2	=	0x0092
                           000093   166 _P1_3	=	0x0093
                           000094   167 _P1_4	=	0x0094
                           000095   168 _P1_5	=	0x0095
                           000096   169 _P1_6	=	0x0096
                           000097   170 _P1_7	=	0x0097
                           000098   171 _RI	=	0x0098
                           000099   172 _TI	=	0x0099
                           00009A   173 _RB8	=	0x009a
                           00009B   174 _TB8	=	0x009b
                           00009C   175 _REN	=	0x009c
                           00009D   176 _SM2	=	0x009d
                           00009E   177 _SM1	=	0x009e
                           00009F   178 _SM0	=	0x009f
                           0000A0   179 _P2_0	=	0x00a0
                           0000A1   180 _P2_1	=	0x00a1
                           0000A2   181 _P2_2	=	0x00a2
                           0000A3   182 _P2_3	=	0x00a3
                           0000A4   183 _P2_4	=	0x00a4
                           0000A5   184 _P2_5	=	0x00a5
                           0000A6   185 _P2_6	=	0x00a6
                           0000A7   186 _P2_7	=	0x00a7
                           0000A8   187 _EX0	=	0x00a8
                           0000A9   188 _ET0	=	0x00a9
                           0000AA   189 _EX1	=	0x00aa
                           0000AB   190 _ET1	=	0x00ab
                           0000AC   191 _ES	=	0x00ac
                           0000AF   192 _EA	=	0x00af
                           0000B0   193 _P3_0	=	0x00b0
                           0000B1   194 _P3_1	=	0x00b1
                           0000B2   195 _P3_2	=	0x00b2
                           0000B3   196 _P3_3	=	0x00b3
                           0000B4   197 _P3_4	=	0x00b4
                           0000B5   198 _P3_5	=	0x00b5
                           0000B6   199 _P3_6	=	0x00b6
                           0000B7   200 _P3_7	=	0x00b7
                           0000B0   201 _RXD	=	0x00b0
                           0000B1   202 _TXD	=	0x00b1
                           0000B2   203 _INT0	=	0x00b2
                           0000B3   204 _INT1	=	0x00b3
                           0000B4   205 _T0	=	0x00b4
                           0000B5   206 _T1	=	0x00b5
                           0000B6   207 _WR	=	0x00b6
                           0000B7   208 _RD	=	0x00b7
                           0000B8   209 _PX0	=	0x00b8
                           0000B9   210 _PT0	=	0x00b9
                           0000BA   211 _PX1	=	0x00ba
                           0000BB   212 _PT1	=	0x00bb
                           0000BC   213 _PS	=	0x00bc
                           0000D0   214 _P	=	0x00d0
                           0000D1   215 _F1	=	0x00d1
                           0000D2   216 _OV	=	0x00d2
                           0000D3   217 _RS0	=	0x00d3
                           0000D4   218 _RS1	=	0x00d4
                           0000D5   219 _F0	=	0x00d5
                           0000D6   220 _AC	=	0x00d6
                           0000D7   221 _CY	=	0x00d7
                                    222 ;--------------------------------------------------------
                                    223 ; overlayable register banks
                                    224 ;--------------------------------------------------------
                                    225 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        226 	.ds 8
                                    227 ;--------------------------------------------------------
                                    228 ; internal ram data
                                    229 ;--------------------------------------------------------
                                    230 	.area DSEG    (DATA)
                                    231 ;--------------------------------------------------------
                                    232 ; overlayable items in internal ram
                                    233 ;--------------------------------------------------------
                                    234 	.area	OSEG    (OVR,DATA)
                                    235 	.area	OSEG    (OVR,DATA)
                                    236 	.area	OSEG    (OVR,DATA)
                                    237 	.area	OSEG    (OVR,DATA)
                                    238 ;--------------------------------------------------------
                                    239 ; indirectly addressable internal ram data
                                    240 ;--------------------------------------------------------
                                    241 	.area ISEG    (DATA)
                                    242 ;--------------------------------------------------------
                                    243 ; absolute internal ram data
                                    244 ;--------------------------------------------------------
                                    245 	.area IABS    (ABS,DATA)
                                    246 	.area IABS    (ABS,DATA)
                                    247 ;--------------------------------------------------------
                                    248 ; bit data
                                    249 ;--------------------------------------------------------
                                    250 	.area BSEG    (BIT)
                                    251 ;--------------------------------------------------------
                                    252 ; paged external ram data
                                    253 ;--------------------------------------------------------
                                    254 	.area PSEG    (PAG,XDATA)
                                    255 ;--------------------------------------------------------
                                    256 ; uninitialized external ram data
                                    257 ;--------------------------------------------------------
                                    258 	.area XSEG    (XDATA)
                                    259 ;--------------------------------------------------------
                                    260 ; absolute external ram data
                                    261 ;--------------------------------------------------------
                                    262 	.area XABS    (ABS,XDATA)
                                    263 ;--------------------------------------------------------
                                    264 ; initialized external ram data
                                    265 ;--------------------------------------------------------
                                    266 	.area XISEG   (XDATA)
                                    267 	.area HOME    (CODE)
                                    268 	.area GSINIT0 (CODE)
                                    269 	.area GSINIT1 (CODE)
                                    270 	.area GSINIT2 (CODE)
                                    271 	.area GSINIT3 (CODE)
                                    272 	.area GSINIT4 (CODE)
                                    273 	.area GSINIT5 (CODE)
                                    274 	.area GSINIT  (CODE)
                                    275 	.area GSFINAL (CODE)
                                    276 	.area CSEG    (CODE)
                                    277 ;--------------------------------------------------------
                                    278 ; global & static initialisations
                                    279 ;--------------------------------------------------------
                                    280 	.area HOME    (CODE)
                                    281 	.area GSINIT  (CODE)
                                    282 	.area GSFINAL (CODE)
                                    283 	.area GSINIT  (CODE)
                                    284 ;--------------------------------------------------------
                                    285 ; Home
                                    286 ;--------------------------------------------------------
                                    287 	.area HOME    (CODE)
                                    288 	.area HOME    (CODE)
                                    289 ;--------------------------------------------------------
                                    290 ; code
                                    291 ;--------------------------------------------------------
                                    292 	.area CSEG    (CODE)
                                    293 ;------------------------------------------------------------
                                    294 ;Allocation info for local variables in function 'delay'
                                    295 ;------------------------------------------------------------
                                    296 ;i                         Allocated to registers 
                                    297 ;j                         Allocated to registers r6 r7 
                                    298 ;k                         Allocated to registers r4 r5 
                                    299 ;------------------------------------------------------------
                                    300 ;	.\spi.c:4: void delay(int i){
                                    301 ;	-----------------------------------------
                                    302 ;	 function delay
                                    303 ;	-----------------------------------------
      000000                        304 _delay:
                           000007   305 	ar7 = 0x07
                           000006   306 	ar6 = 0x06
                           000005   307 	ar5 = 0x05
                           000004   308 	ar4 = 0x04
                           000003   309 	ar3 = 0x03
                           000002   310 	ar2 = 0x02
                           000001   311 	ar1 = 0x01
                           000000   312 	ar0 = 0x00
      000000 AE 82            [24]  313 	mov	r6, dpl
      000002 AF 83            [24]  314 	mov	r7, dph
                                    315 ;	.\spi.c:6: for (j = i; j > 0; j--)
      000004                        316 00106$:
      000004 C3               [12]  317 	clr	c
      000005 E4               [12]  318 	clr	a
      000006 9E               [12]  319 	subb	a,r6
      000007 74 80            [12]  320 	mov	a,#(0x00 ^ 0x80)
      000009 8F F0            [24]  321 	mov	b,r7
      00000B 63 F0 80         [24]  322 	xrl	b,#0x80
      00000E 95 F0            [12]  323 	subb	a,b
      000010 50 1E            [24]  324 	jnc	00108$
                                    325 ;	.\spi.c:7: for (k = 125; k > 0; k--);
      000012 7C 7D            [12]  326 	mov	r4,#0x7d
      000014 7D 00            [12]  327 	mov	r5,#0x00
      000016                        328 00104$:
      000016 1C               [12]  329 	dec	r4
      000017 BC FF 01         [24]  330 	cjne	r4,#0xff,00137$
      00001A 1D               [12]  331 	dec	r5
      00001B                        332 00137$:
      00001B C3               [12]  333 	clr	c
      00001C E4               [12]  334 	clr	a
      00001D 9C               [12]  335 	subb	a,r4
      00001E 74 80            [12]  336 	mov	a,#(0x00 ^ 0x80)
      000020 8D F0            [24]  337 	mov	b,r5
      000022 63 F0 80         [24]  338 	xrl	b,#0x80
      000025 95 F0            [12]  339 	subb	a,b
      000027 40 ED            [24]  340 	jc	00104$
                                    341 ;	.\spi.c:6: for (j = i; j > 0; j--)
      000029 1E               [12]  342 	dec	r6
      00002A BE FF 01         [24]  343 	cjne	r6,#0xff,00139$
      00002D 1F               [12]  344 	dec	r7
      00002E                        345 00139$:
      00002E 80 D4            [24]  346 	sjmp	00106$
      000030                        347 00108$:
                                    348 ;	.\spi.c:8: }
      000030 22               [24]  349 	ret
                                    350 ;------------------------------------------------------------
                                    351 ;Allocation info for local variables in function 'begin'
                                    352 ;------------------------------------------------------------
                                    353 ;	.\spi.c:42: void begin(void){
                                    354 ;	-----------------------------------------
                                    355 ;	 function begin
                                    356 ;	-----------------------------------------
      000031                        357 _begin:
                                    358 ;	.\spi.c:43: P2_6 = 0;
                                    359 ;	assignBit
      000031 C2 A6            [12]  360 	clr	_P2_6
                                    361 ;	.\spi.c:44: }
      000033 22               [24]  362 	ret
                                    363 ;------------------------------------------------------------
                                    364 ;Allocation info for local variables in function 'end'
                                    365 ;------------------------------------------------------------
                                    366 ;	.\spi.c:46: void end(void){
                                    367 ;	-----------------------------------------
                                    368 ;	 function end
                                    369 ;	-----------------------------------------
      000034                        370 _end:
                                    371 ;	.\spi.c:47: P2_6 = 1;
                                    372 ;	assignBit
      000034 D2 A6            [12]  373 	setb	_P2_6
                                    374 ;	.\spi.c:48: }
      000036 22               [24]  375 	ret
                                    376 ;------------------------------------------------------------
                                    377 ;Allocation info for local variables in function 'asm_shift_in_2'
                                    378 ;------------------------------------------------------------
                                    379 ;data                      Allocated to registers 
                                    380 ;------------------------------------------------------------
                                    381 ;	.\spi.c:50: void asm_shift_in_2(unsigned char data){
                                    382 ;	-----------------------------------------
                                    383 ;	 function asm_shift_in_2
                                    384 ;	-----------------------------------------
      000037                        385 _asm_shift_in_2:
      000037 85 82 E0         [24]  386 	mov	_ACC,dpl
                                    387 ;	.\spi.c:112: __endasm;
      00003A FF               [12]  388 	mov	r7, A
      00003B A2 E7            [12]  389 	mov	c, A.7
      00003D 92 A5            [24]  390 	mov	_P2_5, c
      00003F D2 A7            [12]  391 	setb	_P2_7
      000041 C2 A7            [12]  392 	clr	_P2_7
      000043 C2 A5            [12]  393 	clr	_P2_5
      000045 33               [12]  394 	rlc	A
      000046 A2 E7            [12]  395 	mov	c, A.7
      000048 92 A5            [24]  396 	mov	_P2_5, c
      00004A D2 A7            [12]  397 	setb	_P2_7
      00004C C2 A7            [12]  398 	clr	_P2_7
      00004E C2 A5            [12]  399 	clr	_P2_5
      000050 33               [12]  400 	rlc	A
      000051 A2 E7            [12]  401 	mov	c, A.7
      000053 92 A5            [24]  402 	mov	_P2_5, c
      000055 D2 A7            [12]  403 	setb	_P2_7
      000057 C2 A7            [12]  404 	clr	_P2_7
      000059 C2 A5            [12]  405 	clr	_P2_5
      00005B 33               [12]  406 	rlc	A
      00005C A2 E7            [12]  407 	mov	c, A.7
      00005E 92 A5            [24]  408 	mov	_P2_5, c
      000060 D2 A7            [12]  409 	setb	_P2_7
      000062 C2 A7            [12]  410 	clr	_P2_7
      000064 C2 A5            [12]  411 	clr	_P2_5
      000066 33               [12]  412 	rlc	A
      000067 A2 E7            [12]  413 	mov	c, A.7
      000069 92 A5            [24]  414 	mov	_P2_5, c
      00006B D2 A7            [12]  415 	setb	_P2_7
      00006D C2 A7            [12]  416 	clr	_P2_7
      00006F C2 A5            [12]  417 	clr	_P2_5
      000071 33               [12]  418 	rlc	A
      000072 A2 E7            [12]  419 	mov	c, A.7
      000074 92 A5            [24]  420 	mov	_P2_5, c
      000076 D2 A7            [12]  421 	setb	_P2_7
      000078 C2 A7            [12]  422 	clr	_P2_7
      00007A C2 A5            [12]  423 	clr	_P2_5
      00007C 33               [12]  424 	rlc	A
      00007D A2 E7            [12]  425 	mov	c, A.7
      00007F 92 A5            [24]  426 	mov	_P2_5, c
      000081 D2 A7            [12]  427 	setb	_P2_7
      000083 C2 A7            [12]  428 	clr	_P2_7
      000085 C2 A5            [12]  429 	clr	_P2_5
      000087 33               [12]  430 	rlc	A
      000088 A2 E7            [12]  431 	mov	c, A.7
      00008A 92 A5            [24]  432 	mov	_P2_5, c
      00008C D2 A7            [12]  433 	setb	_P2_7
      00008E C2 A7            [12]  434 	clr	_P2_7
      000090 C2 A5            [12]  435 	clr	_P2_5
      000092 33               [12]  436 	rlc	A
      000093 22               [24]  437 	ret
                                    438 ;	.\spi.c:113: }
      000094 22               [24]  439 	ret
                                    440 ;------------------------------------------------------------
                                    441 ;Allocation info for local variables in function 'asm_shift_in'
                                    442 ;------------------------------------------------------------
                                    443 ;	.\spi.c:115: void asm_shift_in(void){
                                    444 ;	-----------------------------------------
                                    445 ;	 function asm_shift_in
                                    446 ;	-----------------------------------------
      000095                        447 _asm_shift_in:
                                    448 ;	.\spi.c:189: __endasm;
      000095 AF 82            [24]  449 	mov	r7, dpl
      000097 8F 06            [24]  450 	mov	ar6,r7
      000099 53 06 80         [24]  451 	anl	ar6,#0x80
      00009C EE               [12]  452 	mov	a,r6
      00009D 24 FF            [12]  453 	add	a,#0xff
      00009F 92 A5            [24]  454 	mov	_P2_5,c
      0000A1 D2 A7            [12]  455 	setb	_P2_7
      0000A3 C2 A7            [12]  456 	clr	_P2_7
      0000A5 C2 A5            [12]  457 	clr	_P2_5
      0000A7 EF               [12]  458 	mov	a,r7
      0000A8 2F               [12]  459 	add	a,r7
      0000A9 FF               [12]  460 	mov	r7,a
      0000AA 54 80            [12]  461 	anl	a,#0x80
      0000AC 24 FF            [12]  462 	add	a,#0xff
      0000AE 92 A5            [24]  463 	mov	_P2_5,c
      0000B0 D2 A7            [12]  464 	setb	_P2_7
      0000B2 C2 A7            [12]  465 	clr	_P2_7
      0000B4 C2 A5            [12]  466 	clr	_P2_5
      0000B6 EF               [12]  467 	mov	a,r7
      0000B7 2F               [12]  468 	add	a,r7
      0000B8 FF               [12]  469 	mov	r7,a
      0000B9 54 80            [12]  470 	anl	a,#0x80
      0000BB 24 FF            [12]  471 	add	a,#0xff
      0000BD 92 A5            [24]  472 	mov	_P2_5,c
      0000BF D2 A7            [12]  473 	setb	_P2_7
      0000C1 C2 A7            [12]  474 	clr	_P2_7
      0000C3 C2 A5            [12]  475 	clr	_P2_5
      0000C5 EF               [12]  476 	mov	a,r7
      0000C6 2F               [12]  477 	add	a,r7
      0000C7 FF               [12]  478 	mov	r7,a
      0000C8 54 80            [12]  479 	anl	a,#0x80
      0000CA 24 FF            [12]  480 	add	a,#0xff
      0000CC 92 A5            [24]  481 	mov	_P2_5,c
      0000CE D2 A7            [12]  482 	setb	_P2_7
      0000D0 C2 A7            [12]  483 	clr	_P2_7
      0000D2 C2 A5            [12]  484 	clr	_P2_5
      0000D4 EF               [12]  485 	mov	a,r7
      0000D5 2F               [12]  486 	add	a,r7
      0000D6 FF               [12]  487 	mov	r7,a
      0000D7 54 80            [12]  488 	anl	a,#0x80
      0000D9 24 FF            [12]  489 	add	a,#0xff
      0000DB 92 A5            [24]  490 	mov	_P2_5,c
      0000DD D2 A7            [12]  491 	setb	_P2_7
      0000DF C2 A7            [12]  492 	clr	_P2_7
      0000E1 C2 A5            [12]  493 	clr	_P2_5
      0000E3 EF               [12]  494 	mov	a,r7
      0000E4 2F               [12]  495 	add	a,r7
      0000E5 FF               [12]  496 	mov	r7,a
      0000E6 54 80            [12]  497 	anl	a,#0x80
      0000E8 24 FF            [12]  498 	add	a,#0xff
      0000EA 92 A5            [24]  499 	mov	_P2_5,c
      0000EC D2 A7            [12]  500 	setb	_P2_7
      0000EE C2 A7            [12]  501 	clr	_P2_7
      0000F0 C2 A5            [12]  502 	clr	_P2_5
      0000F2 EF               [12]  503 	mov	a,r7
      0000F3 2F               [12]  504 	add	a,r7
      0000F4 FF               [12]  505 	mov	r7,a
      0000F5 54 80            [12]  506 	anl	a,#0x80
      0000F7 24 FF            [12]  507 	add	a,#0xff
      0000F9 92 A5            [24]  508 	mov	_P2_5,c
      0000FB D2 A7            [12]  509 	setb	_P2_7
      0000FD C2 A7            [12]  510 	clr	_P2_7
      0000FF C2 A5            [12]  511 	clr	_P2_5
      000101 EF               [12]  512 	mov	a,r7
      000102 2F               [12]  513 	add	a,r7
      000103 54 80            [12]  514 	anl	a,#0x80
      000105 24 FF            [12]  515 	add	a,#0xff
      000107 92 A5            [24]  516 	mov	_P2_5,c
      000109 D2 A7            [12]  517 	setb	_P2_7
      00010B C2 A7            [12]  518 	clr	_P2_7
      00010D C2 A5            [12]  519 	clr	_P2_5
      00010F 22               [24]  520 	ret
                                    521 ;	.\spi.c:190: }
      000110 22               [24]  522 	ret
                                    523 ;------------------------------------------------------------
                                    524 ;Allocation info for local variables in function 'asm_shift_out_2'
                                    525 ;------------------------------------------------------------
                                    526 ;	.\spi.c:192: unsigned char asm_shift_out_2(void){
                                    527 ;	-----------------------------------------
                                    528 ;	 function asm_shift_out_2
                                    529 ;	-----------------------------------------
      000111                        530 _asm_shift_out_2:
                                    531 ;	.\spi.c:245: __endasm;
      000111 74 00            [12]  532 	mov	A, #0
      000113 33               [12]  533 	rlc	A
      000114 D2 A7            [12]  534 	setb	_P2_7
      000116 A2 A4            [12]  535 	mov	c, _P2_4
      000118 92 E0            [24]  536 	mov	A.0, c
      00011A C2 A7            [12]  537 	clr	_P2_7
      00011C 33               [12]  538 	rlc	A
      00011D D2 A7            [12]  539 	setb	_P2_7
      00011F A2 A4            [12]  540 	mov	c, _P2_4
      000121 92 E0            [24]  541 	mov	A.0, c
      000123 C2 A7            [12]  542 	clr	_P2_7
      000125 33               [12]  543 	rlc	A
      000126 D2 A7            [12]  544 	setb	_P2_7
      000128 A2 A4            [12]  545 	mov	c, _P2_4
      00012A 92 E0            [24]  546 	mov	A.0, c
      00012C C2 A7            [12]  547 	clr	_P2_7
      00012E 33               [12]  548 	rlc	A
      00012F D2 A7            [12]  549 	setb	_P2_7
      000131 A2 A4            [12]  550 	mov	c, _P2_4
      000133 92 E0            [24]  551 	mov	A.0, c
      000135 C2 A7            [12]  552 	clr	_P2_7
      000137 33               [12]  553 	rlc	A
      000138 D2 A7            [12]  554 	setb	_P2_7
      00013A A2 A4            [12]  555 	mov	c, _P2_4
      00013C 92 E0            [24]  556 	mov	A.0, c
      00013E C2 A7            [12]  557 	clr	_P2_7
      000140 33               [12]  558 	rlc	A
      000141 D2 A7            [12]  559 	setb	_P2_7
      000143 A2 A4            [12]  560 	mov	c, _P2_4
      000145 92 E0            [24]  561 	mov	A.0, c
      000147 C2 A7            [12]  562 	clr	_P2_7
      000149 33               [12]  563 	rlc	A
      00014A D2 A7            [12]  564 	setb	_P2_7
      00014C A2 A4            [12]  565 	mov	c, _P2_4
      00014E 92 E0            [24]  566 	mov	A.0, c
      000150 C2 A7            [12]  567 	clr	_P2_7
      000152 33               [12]  568 	rlc	A
      000153 D2 A7            [12]  569 	setb	_P2_7
      000155 A2 A4            [12]  570 	mov	c, _P2_4
      000157 92 E0            [24]  571 	mov	A.0, c
      000159 C2 A7            [12]  572 	clr	_P2_7
      00015B FF               [12]  573 	mov	r7, A
                                    574 ;	.\spi.c:247: return ACC;
      00015C 85 E0 82         [24]  575 	mov	dpl, _ACC
                                    576 ;	.\spi.c:248: }
      00015F 22               [24]  577 	ret
                                    578 ;------------------------------------------------------------
                                    579 ;Allocation info for local variables in function 'asm_shift_out'
                                    580 ;------------------------------------------------------------
                                    581 ;	.\spi.c:249: void asm_shift_out(void){
                                    582 ;	-----------------------------------------
                                    583 ;	 function asm_shift_out
                                    584 ;	-----------------------------------------
      000160                        585 _asm_shift_out:
                                    586 ;	.\spi.c:332: __endasm;
      000160 D2 A7            [12]  587 	setb	_P2_7
      000162 A2 A4            [12]  588 	mov	c,_P2_4
      000164 E4               [12]  589 	clr	a
      000165 33               [12]  590 	rlc	a
      000166 FF               [12]  591 	mov	r7,a
      000167 C2 A7            [12]  592 	clr	_P2_7
      000169 EF               [12]  593 	mov	a,r7
      00016A 2F               [12]  594 	add	a,r7
      00016B FF               [12]  595 	mov	r7,a
      00016C D2 A7            [12]  596 	setb	_P2_7
      00016E A2 A4            [12]  597 	mov	c,_P2_4
      000170 E4               [12]  598 	clr	a
      000171 33               [12]  599 	rlc	a
      000172 FE               [12]  600 	mov	r6,a
      000173 EF               [12]  601 	mov	a,r7
      000174 42 06            [12]  602 	orl	ar6,a
      000176 C2 A7            [12]  603 	clr	_P2_7
      000178 EE               [12]  604 	mov	a,r6
      000179 2E               [12]  605 	add	a,r6
      00017A FE               [12]  606 	mov	r6,a
      00017B D2 A7            [12]  607 	setb	_P2_7
      00017D A2 A4            [12]  608 	mov	c,_P2_4
      00017F E4               [12]  609 	clr	a
      000180 33               [12]  610 	rlc	a
      000181 FF               [12]  611 	mov	r7,a
      000182 EE               [12]  612 	mov	a,r6
      000183 42 07            [12]  613 	orl	ar7,a
      000185 C2 A7            [12]  614 	clr	_P2_7
      000187 EF               [12]  615 	mov	a,r7
      000188 2F               [12]  616 	add	a,r7
      000189 FF               [12]  617 	mov	r7,a
      00018A D2 A7            [12]  618 	setb	_P2_7
      00018C A2 A4            [12]  619 	mov	c,_P2_4
      00018E E4               [12]  620 	clr	a
      00018F 33               [12]  621 	rlc	a
      000190 FE               [12]  622 	mov	r6,a
      000191 EF               [12]  623 	mov	a,r7
      000192 42 06            [12]  624 	orl	ar6,a
      000194 C2 A7            [12]  625 	clr	_P2_7
      000196 EE               [12]  626 	mov	a,r6
      000197 2E               [12]  627 	add	a,r6
      000198 FE               [12]  628 	mov	r6,a
      000199 D2 A7            [12]  629 	setb	_P2_7
      00019B A2 A4            [12]  630 	mov	c,_P2_4
      00019D E4               [12]  631 	clr	a
      00019E 33               [12]  632 	rlc	a
      00019F 42 06            [12]  633 	orl	ar6,a
      0001A1 C2 A7            [12]  634 	clr	_P2_7
      0001A3 EE               [12]  635 	mov	a,r6
      0001A4 2E               [12]  636 	add	a,r6
      0001A5 FE               [12]  637 	mov	r6,a
      0001A6 D2 A7            [12]  638 	setb	_P2_7
      0001A8 A2 A4            [12]  639 	mov	c,_P2_4
      0001AA E4               [12]  640 	clr	a
      0001AB 33               [12]  641 	rlc	a
      0001AC FF               [12]  642 	mov	r7,a
      0001AD EE               [12]  643 	mov	a,r6
      0001AE 42 07            [12]  644 	orl	ar7,a
      0001B0 C2 A7            [12]  645 	clr	_P2_7
      0001B2 EF               [12]  646 	mov	a,r7
      0001B3 2F               [12]  647 	add	a,r7
      0001B4 FF               [12]  648 	mov	r7,a
      0001B5 D2 A7            [12]  649 	setb	_P2_7
      0001B7 A2 A4            [12]  650 	mov	c,_P2_4
      0001B9 E4               [12]  651 	clr	a
      0001BA 33               [12]  652 	rlc	a
      0001BB FE               [12]  653 	mov	r6,a
      0001BC EF               [12]  654 	mov	a,r7
      0001BD 42 06            [12]  655 	orl	ar6,a
      0001BF C2 A7            [12]  656 	clr	_P2_7
      0001C1 EE               [12]  657 	mov	a,r6
      0001C2 2E               [12]  658 	add	a,r6
      0001C3 FE               [12]  659 	mov	r6,a
      0001C4 D2 A7            [12]  660 	setb	_P2_7
      0001C6 A2 A4            [12]  661 	mov	c,_P2_4
      0001C8 E4               [12]  662 	clr	a
      0001C9 33               [12]  663 	rlc	a
      0001CA 4E               [12]  664 	orl	a,r6
      0001CB F5 82            [12]  665 	mov	dpl,a
      0001CD C2 A7            [12]  666 	clr	_P2_7
      0001CF 22               [24]  667 	ret
                                    668 ;	.\spi.c:333: }
      0001D0 22               [24]  669 	ret
                                    670 ;------------------------------------------------------------
                                    671 ;Allocation info for local variables in function 'shift_in'
                                    672 ;------------------------------------------------------------
                                    673 ;data                      Allocated to registers r7 
                                    674 ;------------------------------------------------------------
                                    675 ;	.\spi.c:335: void shift_in(unsigned char data){
                                    676 ;	-----------------------------------------
                                    677 ;	 function shift_in
                                    678 ;	-----------------------------------------
      0001D1                        679 _shift_in:
      0001D1 AF 82            [24]  680 	mov	r7, dpl
                                    681 ;	.\spi.c:336: P2_5 = (data & 0x80) ? 1 : 0;
      0001D3 8F 06            [24]  682 	mov	ar6,r7
      0001D5 53 06 80         [24]  683 	anl	ar6,#0x80
                                    684 ;	assignBit
      0001D8 EE               [12]  685 	mov	a,r6
      0001D9 24 FF            [12]  686 	add	a,#0xff
      0001DB 92 A5            [24]  687 	mov	_P2_5,c
                                    688 ;	.\spi.c:337: P2_7 = 1;        
                                    689 ;	assignBit
      0001DD D2 A7            [12]  690 	setb	_P2_7
                                    691 ;	.\spi.c:338: P2_7 = 0;
                                    692 ;	assignBit
      0001DF C2 A7            [12]  693 	clr	_P2_7
                                    694 ;	.\spi.c:339: P2_5 = 0;
                                    695 ;	assignBit
      0001E1 C2 A5            [12]  696 	clr	_P2_5
                                    697 ;	.\spi.c:340: data <<= 1;
      0001E3 EF               [12]  698 	mov	a,r7
      0001E4 2F               [12]  699 	add	a,r7
                                    700 ;	.\spi.c:341: P2_5 = (data & 0x80) ? 1 : 0;
      0001E5 FF               [12]  701 	mov	r7,a
                                    702 ;	assignBit
      0001E6 54 80            [12]  703 	anl	a,#0x80
      0001E8 24 FF            [12]  704 	add	a,#0xff
      0001EA 92 A5            [24]  705 	mov	_P2_5,c
                                    706 ;	.\spi.c:342: P2_7 = 1;        
                                    707 ;	assignBit
      0001EC D2 A7            [12]  708 	setb	_P2_7
                                    709 ;	.\spi.c:343: P2_7 = 0;
                                    710 ;	assignBit
      0001EE C2 A7            [12]  711 	clr	_P2_7
                                    712 ;	.\spi.c:344: P2_5 = 0;
                                    713 ;	assignBit
      0001F0 C2 A5            [12]  714 	clr	_P2_5
                                    715 ;	.\spi.c:345: data <<= 1;
      0001F2 EF               [12]  716 	mov	a,r7
      0001F3 2F               [12]  717 	add	a,r7
                                    718 ;	.\spi.c:346: P2_5 = (data & 0x80) ? 1 : 0;
      0001F4 FF               [12]  719 	mov	r7,a
                                    720 ;	assignBit
      0001F5 54 80            [12]  721 	anl	a,#0x80
      0001F7 24 FF            [12]  722 	add	a,#0xff
      0001F9 92 A5            [24]  723 	mov	_P2_5,c
                                    724 ;	.\spi.c:347: P2_7 = 1;        
                                    725 ;	assignBit
      0001FB D2 A7            [12]  726 	setb	_P2_7
                                    727 ;	.\spi.c:348: P2_7 = 0;
                                    728 ;	assignBit
      0001FD C2 A7            [12]  729 	clr	_P2_7
                                    730 ;	.\spi.c:349: P2_5 = 0;
                                    731 ;	assignBit
      0001FF C2 A5            [12]  732 	clr	_P2_5
                                    733 ;	.\spi.c:350: data <<= 1;
      000201 EF               [12]  734 	mov	a,r7
      000202 2F               [12]  735 	add	a,r7
                                    736 ;	.\spi.c:351: P2_5 = (data & 0x80) ? 1 : 0;
      000203 FF               [12]  737 	mov	r7,a
                                    738 ;	assignBit
      000204 54 80            [12]  739 	anl	a,#0x80
      000206 24 FF            [12]  740 	add	a,#0xff
      000208 92 A5            [24]  741 	mov	_P2_5,c
                                    742 ;	.\spi.c:352: P2_7 = 1;        
                                    743 ;	assignBit
      00020A D2 A7            [12]  744 	setb	_P2_7
                                    745 ;	.\spi.c:353: P2_7 = 0;
                                    746 ;	assignBit
      00020C C2 A7            [12]  747 	clr	_P2_7
                                    748 ;	.\spi.c:354: P2_5 = 0;
                                    749 ;	assignBit
      00020E C2 A5            [12]  750 	clr	_P2_5
                                    751 ;	.\spi.c:355: data <<= 1;
      000210 EF               [12]  752 	mov	a,r7
      000211 2F               [12]  753 	add	a,r7
                                    754 ;	.\spi.c:356: P2_5 = (data & 0x80) ? 1 : 0;
      000212 FF               [12]  755 	mov	r7,a
                                    756 ;	assignBit
      000213 54 80            [12]  757 	anl	a,#0x80
      000215 24 FF            [12]  758 	add	a,#0xff
      000217 92 A5            [24]  759 	mov	_P2_5,c
                                    760 ;	.\spi.c:357: P2_7 = 1;        
                                    761 ;	assignBit
      000219 D2 A7            [12]  762 	setb	_P2_7
                                    763 ;	.\spi.c:358: P2_7 = 0;
                                    764 ;	assignBit
      00021B C2 A7            [12]  765 	clr	_P2_7
                                    766 ;	.\spi.c:359: P2_5 = 0;
                                    767 ;	assignBit
      00021D C2 A5            [12]  768 	clr	_P2_5
                                    769 ;	.\spi.c:360: data <<= 1;
      00021F EF               [12]  770 	mov	a,r7
      000220 2F               [12]  771 	add	a,r7
                                    772 ;	.\spi.c:361: P2_5 = (data & 0x80) ? 1 : 0;
      000221 FF               [12]  773 	mov	r7,a
                                    774 ;	assignBit
      000222 54 80            [12]  775 	anl	a,#0x80
      000224 24 FF            [12]  776 	add	a,#0xff
      000226 92 A5            [24]  777 	mov	_P2_5,c
                                    778 ;	.\spi.c:362: P2_7 = 1;        
                                    779 ;	assignBit
      000228 D2 A7            [12]  780 	setb	_P2_7
                                    781 ;	.\spi.c:363: P2_7 = 0;
                                    782 ;	assignBit
      00022A C2 A7            [12]  783 	clr	_P2_7
                                    784 ;	.\spi.c:364: P2_5 = 0;
                                    785 ;	assignBit
      00022C C2 A5            [12]  786 	clr	_P2_5
                                    787 ;	.\spi.c:365: data <<= 1;
      00022E EF               [12]  788 	mov	a,r7
      00022F 2F               [12]  789 	add	a,r7
                                    790 ;	.\spi.c:366: P2_5 = (data & 0x80) ? 1 : 0;
      000230 FF               [12]  791 	mov	r7,a
                                    792 ;	assignBit
      000231 54 80            [12]  793 	anl	a,#0x80
      000233 24 FF            [12]  794 	add	a,#0xff
      000235 92 A5            [24]  795 	mov	_P2_5,c
                                    796 ;	.\spi.c:367: P2_7 = 1;        
                                    797 ;	assignBit
      000237 D2 A7            [12]  798 	setb	_P2_7
                                    799 ;	.\spi.c:368: P2_7 = 0;
                                    800 ;	assignBit
      000239 C2 A7            [12]  801 	clr	_P2_7
                                    802 ;	.\spi.c:369: P2_5 = 0;
                                    803 ;	assignBit
      00023B C2 A5            [12]  804 	clr	_P2_5
                                    805 ;	.\spi.c:370: data <<= 1;
      00023D EF               [12]  806 	mov	a,r7
      00023E 2F               [12]  807 	add	a,r7
                                    808 ;	.\spi.c:371: P2_5 = (data & 0x80) ? 1 : 0;
                                    809 ;	assignBit
      00023F 54 80            [12]  810 	anl	a,#0x80
      000241 24 FF            [12]  811 	add	a,#0xff
      000243 92 A5            [24]  812 	mov	_P2_5,c
                                    813 ;	.\spi.c:372: P2_7 = 1;        
                                    814 ;	assignBit
      000245 D2 A7            [12]  815 	setb	_P2_7
                                    816 ;	.\spi.c:373: P2_7 = 0;
                                    817 ;	assignBit
      000247 C2 A7            [12]  818 	clr	_P2_7
                                    819 ;	.\spi.c:374: P2_5 = 0;
                                    820 ;	assignBit
      000249 C2 A5            [12]  821 	clr	_P2_5
                                    822 ;	.\spi.c:375: data <<= 1;
                                    823 ;	.\spi.c:376: }
      00024B 22               [24]  824 	ret
                                    825 ;------------------------------------------------------------
                                    826 ;Allocation info for local variables in function 'shift_out'
                                    827 ;------------------------------------------------------------
                                    828 ;data                      Allocated to registers r6 
                                    829 ;------------------------------------------------------------
                                    830 ;	.\spi.c:378: unsigned char shift_out(void){
                                    831 ;	-----------------------------------------
                                    832 ;	 function shift_out
                                    833 ;	-----------------------------------------
      00024C                        834 _shift_out:
                                    835 ;	.\spi.c:381: P2_7 = 1;
                                    836 ;	assignBit
      00024C D2 A7            [12]  837 	setb	_P2_7
                                    838 ;	.\spi.c:382: data |= P2_4;
      00024E A2 A4            [12]  839 	mov	c,_P2_4
      000250 E4               [12]  840 	clr	a
      000251 33               [12]  841 	rlc	a
      000252 FF               [12]  842 	mov	r7,a
                                    843 ;	.\spi.c:383: P2_7 = 0;
                                    844 ;	assignBit
      000253 C2 A7            [12]  845 	clr	_P2_7
                                    846 ;	.\spi.c:384: data <<= 1;
      000255 EF               [12]  847 	mov	a,r7
      000256 2F               [12]  848 	add	a,r7
      000257 FF               [12]  849 	mov	r7,a
                                    850 ;	.\spi.c:385: P2_7 = 1;
                                    851 ;	assignBit
      000258 D2 A7            [12]  852 	setb	_P2_7
                                    853 ;	.\spi.c:386: data |= P2_4;
      00025A A2 A4            [12]  854 	mov	c,_P2_4
      00025C E4               [12]  855 	clr	a
      00025D 33               [12]  856 	rlc	a
      00025E FE               [12]  857 	mov	r6,a
      00025F EF               [12]  858 	mov	a,r7
      000260 42 06            [12]  859 	orl	ar6,a
                                    860 ;	.\spi.c:387: P2_7 = 0;
                                    861 ;	assignBit
      000262 C2 A7            [12]  862 	clr	_P2_7
                                    863 ;	.\spi.c:388: data <<= 1;
      000264 EE               [12]  864 	mov	a,r6
      000265 2E               [12]  865 	add	a,r6
      000266 FE               [12]  866 	mov	r6,a
                                    867 ;	.\spi.c:389: P2_7 = 1;
                                    868 ;	assignBit
      000267 D2 A7            [12]  869 	setb	_P2_7
                                    870 ;	.\spi.c:390: data |= P2_4;
      000269 A2 A4            [12]  871 	mov	c,_P2_4
      00026B E4               [12]  872 	clr	a
      00026C 33               [12]  873 	rlc	a
      00026D FF               [12]  874 	mov	r7,a
      00026E EE               [12]  875 	mov	a,r6
      00026F 42 07            [12]  876 	orl	ar7,a
                                    877 ;	.\spi.c:391: P2_7 = 0;
                                    878 ;	assignBit
      000271 C2 A7            [12]  879 	clr	_P2_7
                                    880 ;	.\spi.c:392: data <<= 1;
      000273 EF               [12]  881 	mov	a,r7
      000274 2F               [12]  882 	add	a,r7
      000275 FF               [12]  883 	mov	r7,a
                                    884 ;	.\spi.c:393: P2_7 = 1;
                                    885 ;	assignBit
      000276 D2 A7            [12]  886 	setb	_P2_7
                                    887 ;	.\spi.c:394: data |= P2_4;
      000278 A2 A4            [12]  888 	mov	c,_P2_4
      00027A E4               [12]  889 	clr	a
      00027B 33               [12]  890 	rlc	a
      00027C FE               [12]  891 	mov	r6,a
      00027D EF               [12]  892 	mov	a,r7
      00027E 42 06            [12]  893 	orl	ar6,a
                                    894 ;	.\spi.c:395: P2_7 = 0;
                                    895 ;	assignBit
      000280 C2 A7            [12]  896 	clr	_P2_7
                                    897 ;	.\spi.c:396: data <<= 1;
      000282 EE               [12]  898 	mov	a,r6
      000283 2E               [12]  899 	add	a,r6
      000284 FE               [12]  900 	mov	r6,a
                                    901 ;	.\spi.c:397: P2_7 = 1;
                                    902 ;	assignBit
      000285 D2 A7            [12]  903 	setb	_P2_7
                                    904 ;	.\spi.c:398: data |= P2_4;
      000287 A2 A4            [12]  905 	mov	c,_P2_4
      000289 E4               [12]  906 	clr	a
      00028A 33               [12]  907 	rlc	a
      00028B 42 06            [12]  908 	orl	ar6,a
                                    909 ;	.\spi.c:399: P2_7 = 0;
                                    910 ;	assignBit
      00028D C2 A7            [12]  911 	clr	_P2_7
                                    912 ;	.\spi.c:400: data <<= 1;
      00028F EE               [12]  913 	mov	a,r6
      000290 2E               [12]  914 	add	a,r6
      000291 FE               [12]  915 	mov	r6,a
                                    916 ;	.\spi.c:401: P2_7 = 1;
                                    917 ;	assignBit
      000292 D2 A7            [12]  918 	setb	_P2_7
                                    919 ;	.\spi.c:402: data |= P2_4;
      000294 A2 A4            [12]  920 	mov	c,_P2_4
      000296 E4               [12]  921 	clr	a
      000297 33               [12]  922 	rlc	a
      000298 FF               [12]  923 	mov	r7,a
      000299 EE               [12]  924 	mov	a,r6
      00029A 42 07            [12]  925 	orl	ar7,a
                                    926 ;	.\spi.c:403: P2_7 = 0;
                                    927 ;	assignBit
      00029C C2 A7            [12]  928 	clr	_P2_7
                                    929 ;	.\spi.c:404: data <<= 1;
      00029E EF               [12]  930 	mov	a,r7
      00029F 2F               [12]  931 	add	a,r7
      0002A0 FF               [12]  932 	mov	r7,a
                                    933 ;	.\spi.c:405: P2_7 = 1;
                                    934 ;	assignBit
      0002A1 D2 A7            [12]  935 	setb	_P2_7
                                    936 ;	.\spi.c:406: data |= P2_4;
      0002A3 A2 A4            [12]  937 	mov	c,_P2_4
      0002A5 E4               [12]  938 	clr	a
      0002A6 33               [12]  939 	rlc	a
      0002A7 FE               [12]  940 	mov	r6,a
      0002A8 EF               [12]  941 	mov	a,r7
      0002A9 42 06            [12]  942 	orl	ar6,a
                                    943 ;	.\spi.c:407: P2_7 = 0;
                                    944 ;	assignBit
      0002AB C2 A7            [12]  945 	clr	_P2_7
                                    946 ;	.\spi.c:408: data <<= 1;
      0002AD EE               [12]  947 	mov	a,r6
      0002AE 2E               [12]  948 	add	a,r6
      0002AF FE               [12]  949 	mov	r6,a
                                    950 ;	.\spi.c:409: P2_7 = 1;
                                    951 ;	assignBit
      0002B0 D2 A7            [12]  952 	setb	_P2_7
                                    953 ;	.\spi.c:410: data |= P2_4;
      0002B2 A2 A4            [12]  954 	mov	c,_P2_4
      0002B4 E4               [12]  955 	clr	a
      0002B5 33               [12]  956 	rlc	a
      0002B6 4E               [12]  957 	orl	a,r6
      0002B7 F5 82            [12]  958 	mov	dpl,a
                                    959 ;	.\spi.c:411: P2_7 = 0;
                                    960 ;	assignBit
      0002B9 C2 A7            [12]  961 	clr	_P2_7
                                    962 ;	.\spi.c:412: return data;
                                    963 ;	.\spi.c:413: }
      0002BB 22               [24]  964 	ret
                                    965 	.area CSEG    (CODE)
                                    966 	.area CONST   (CODE)
                                    967 	.area XINIT   (CODE)
                                    968 	.area CABS    (ABS,CODE)
