                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.0 #14620 (MINGW32)
                                      4 ;--------------------------------------------------------
                                      5 	.module spi
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _CY
                                     12 	.globl _AC
                                     13 	.globl _F0
                                     14 	.globl _RS1
                                     15 	.globl _RS0
                                     16 	.globl _OV
                                     17 	.globl _F1
                                     18 	.globl _P
                                     19 	.globl _PS
                                     20 	.globl _PT1
                                     21 	.globl _PX1
                                     22 	.globl _PT0
                                     23 	.globl _PX0
                                     24 	.globl _RD
                                     25 	.globl _WR
                                     26 	.globl _T1
                                     27 	.globl _T0
                                     28 	.globl _INT1
                                     29 	.globl _INT0
                                     30 	.globl _TXD
                                     31 	.globl _RXD
                                     32 	.globl _P3_7
                                     33 	.globl _P3_6
                                     34 	.globl _P3_5
                                     35 	.globl _P3_4
                                     36 	.globl _P3_3
                                     37 	.globl _P3_2
                                     38 	.globl _P3_1
                                     39 	.globl _P3_0
                                     40 	.globl _EA
                                     41 	.globl _ES
                                     42 	.globl _ET1
                                     43 	.globl _EX1
                                     44 	.globl _ET0
                                     45 	.globl _EX0
                                     46 	.globl _P2_7
                                     47 	.globl _P2_6
                                     48 	.globl _P2_5
                                     49 	.globl _P2_4
                                     50 	.globl _P2_3
                                     51 	.globl _P2_2
                                     52 	.globl _P2_1
                                     53 	.globl _P2_0
                                     54 	.globl _SM0
                                     55 	.globl _SM1
                                     56 	.globl _SM2
                                     57 	.globl _REN
                                     58 	.globl _TB8
                                     59 	.globl _RB8
                                     60 	.globl _TI
                                     61 	.globl _RI
                                     62 	.globl _P1_7
                                     63 	.globl _P1_6
                                     64 	.globl _P1_5
                                     65 	.globl _P1_4
                                     66 	.globl _P1_3
                                     67 	.globl _P1_2
                                     68 	.globl _P1_1
                                     69 	.globl _P1_0
                                     70 	.globl _TF1
                                     71 	.globl _TR1
                                     72 	.globl _TF0
                                     73 	.globl _TR0
                                     74 	.globl _IE1
                                     75 	.globl _IT1
                                     76 	.globl _IE0
                                     77 	.globl _IT0
                                     78 	.globl _P0_7
                                     79 	.globl _P0_6
                                     80 	.globl _P0_5
                                     81 	.globl _P0_4
                                     82 	.globl _P0_3
                                     83 	.globl _P0_2
                                     84 	.globl _P0_1
                                     85 	.globl _P0_0
                                     86 	.globl _B
                                     87 	.globl _ACC
                                     88 	.globl _PSW
                                     89 	.globl _IP
                                     90 	.globl _P3
                                     91 	.globl _IE
                                     92 	.globl _P2
                                     93 	.globl _SBUF
                                     94 	.globl _SCON
                                     95 	.globl _P1
                                     96 	.globl _TH1
                                     97 	.globl _TH0
                                     98 	.globl _TL1
                                     99 	.globl _TL0
                                    100 	.globl _TMOD
                                    101 	.globl _TCON
                                    102 	.globl _PCON
                                    103 	.globl _DPH
                                    104 	.globl _DPL
                                    105 	.globl _SP
                                    106 	.globl _P0
                                    107 	.globl _delay
                                    108 	.globl _begin
                                    109 	.globl _end
                                    110 	.globl _asm_shift_in_2
                                    111 	.globl _asm_shift_in
                                    112 	.globl _asm_shift_out_2
                                    113 	.globl _asm_shift_out
                                    114 	.globl _shift_in
                                    115 	.globl _shift_out
                                    116 ;--------------------------------------------------------
                                    117 ; special function registers
                                    118 ;--------------------------------------------------------
                                    119 	.area RSEG    (ABS,DATA)
      000000                        120 	.org 0x0000
                           000080   121 _P0	=	0x0080
                           000081   122 _SP	=	0x0081
                           000082   123 _DPL	=	0x0082
                           000083   124 _DPH	=	0x0083
                           000087   125 _PCON	=	0x0087
                           000088   126 _TCON	=	0x0088
                           000089   127 _TMOD	=	0x0089
                           00008A   128 _TL0	=	0x008a
                           00008B   129 _TL1	=	0x008b
                           00008C   130 _TH0	=	0x008c
                           00008D   131 _TH1	=	0x008d
                           000090   132 _P1	=	0x0090
                           000098   133 _SCON	=	0x0098
                           000099   134 _SBUF	=	0x0099
                           0000A0   135 _P2	=	0x00a0
                           0000A8   136 _IE	=	0x00a8
                           0000B0   137 _P3	=	0x00b0
                           0000B8   138 _IP	=	0x00b8
                           0000D0   139 _PSW	=	0x00d0
                           0000E0   140 _ACC	=	0x00e0
                           0000F0   141 _B	=	0x00f0
                                    142 ;--------------------------------------------------------
                                    143 ; special function bits
                                    144 ;--------------------------------------------------------
                                    145 	.area RSEG    (ABS,DATA)
      000000                        146 	.org 0x0000
                           000080   147 _P0_0	=	0x0080
                           000081   148 _P0_1	=	0x0081
                           000082   149 _P0_2	=	0x0082
                           000083   150 _P0_3	=	0x0083
                           000084   151 _P0_4	=	0x0084
                           000085   152 _P0_5	=	0x0085
                           000086   153 _P0_6	=	0x0086
                           000087   154 _P0_7	=	0x0087
                           000088   155 _IT0	=	0x0088
                           000089   156 _IE0	=	0x0089
                           00008A   157 _IT1	=	0x008a
                           00008B   158 _IE1	=	0x008b
                           00008C   159 _TR0	=	0x008c
                           00008D   160 _TF0	=	0x008d
                           00008E   161 _TR1	=	0x008e
                           00008F   162 _TF1	=	0x008f
                           000090   163 _P1_0	=	0x0090
                           000091   164 _P1_1	=	0x0091
                           000092   165 _P1_2	=	0x0092
                           000093   166 _P1_3	=	0x0093
                           000094   167 _P1_4	=	0x0094
                           000095   168 _P1_5	=	0x0095
                           000096   169 _P1_6	=	0x0096
                           000097   170 _P1_7	=	0x0097
                           000098   171 _RI	=	0x0098
                           000099   172 _TI	=	0x0099
                           00009A   173 _RB8	=	0x009a
                           00009B   174 _TB8	=	0x009b
                           00009C   175 _REN	=	0x009c
                           00009D   176 _SM2	=	0x009d
                           00009E   177 _SM1	=	0x009e
                           00009F   178 _SM0	=	0x009f
                           0000A0   179 _P2_0	=	0x00a0
                           0000A1   180 _P2_1	=	0x00a1
                           0000A2   181 _P2_2	=	0x00a2
                           0000A3   182 _P2_3	=	0x00a3
                           0000A4   183 _P2_4	=	0x00a4
                           0000A5   184 _P2_5	=	0x00a5
                           0000A6   185 _P2_6	=	0x00a6
                           0000A7   186 _P2_7	=	0x00a7
                           0000A8   187 _EX0	=	0x00a8
                           0000A9   188 _ET0	=	0x00a9
                           0000AA   189 _EX1	=	0x00aa
                           0000AB   190 _ET1	=	0x00ab
                           0000AC   191 _ES	=	0x00ac
                           0000AF   192 _EA	=	0x00af
                           0000B0   193 _P3_0	=	0x00b0
                           0000B1   194 _P3_1	=	0x00b1
                           0000B2   195 _P3_2	=	0x00b2
                           0000B3   196 _P3_3	=	0x00b3
                           0000B4   197 _P3_4	=	0x00b4
                           0000B5   198 _P3_5	=	0x00b5
                           0000B6   199 _P3_6	=	0x00b6
                           0000B7   200 _P3_7	=	0x00b7
                           0000B0   201 _RXD	=	0x00b0
                           0000B1   202 _TXD	=	0x00b1
                           0000B2   203 _INT0	=	0x00b2
                           0000B3   204 _INT1	=	0x00b3
                           0000B4   205 _T0	=	0x00b4
                           0000B5   206 _T1	=	0x00b5
                           0000B6   207 _WR	=	0x00b6
                           0000B7   208 _RD	=	0x00b7
                           0000B8   209 _PX0	=	0x00b8
                           0000B9   210 _PT0	=	0x00b9
                           0000BA   211 _PX1	=	0x00ba
                           0000BB   212 _PT1	=	0x00bb
                           0000BC   213 _PS	=	0x00bc
                           0000D0   214 _P	=	0x00d0
                           0000D1   215 _F1	=	0x00d1
                           0000D2   216 _OV	=	0x00d2
                           0000D3   217 _RS0	=	0x00d3
                           0000D4   218 _RS1	=	0x00d4
                           0000D5   219 _F0	=	0x00d5
                           0000D6   220 _AC	=	0x00d6
                           0000D7   221 _CY	=	0x00d7
                                    222 ;--------------------------------------------------------
                                    223 ; overlayable register banks
                                    224 ;--------------------------------------------------------
                                    225 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        226 	.ds 8
                                    227 ;--------------------------------------------------------
                                    228 ; internal ram data
                                    229 ;--------------------------------------------------------
                                    230 	.area DSEG    (DATA)
                                    231 ;--------------------------------------------------------
                                    232 ; overlayable items in internal ram
                                    233 ;--------------------------------------------------------
                                    234 	.area	OSEG    (OVR,DATA)
                                    235 	.area	OSEG    (OVR,DATA)
                                    236 	.area	OSEG    (OVR,DATA)
                                    237 	.area	OSEG    (OVR,DATA)
                                    238 ;--------------------------------------------------------
                                    239 ; indirectly addressable internal ram data
                                    240 ;--------------------------------------------------------
                                    241 	.area ISEG    (DATA)
                                    242 ;--------------------------------------------------------
                                    243 ; absolute internal ram data
                                    244 ;--------------------------------------------------------
                                    245 	.area IABS    (ABS,DATA)
                                    246 	.area IABS    (ABS,DATA)
                                    247 ;--------------------------------------------------------
                                    248 ; bit data
                                    249 ;--------------------------------------------------------
                                    250 	.area BSEG    (BIT)
                                    251 ;--------------------------------------------------------
                                    252 ; paged external ram data
                                    253 ;--------------------------------------------------------
                                    254 	.area PSEG    (PAG,XDATA)
                                    255 ;--------------------------------------------------------
                                    256 ; uninitialized external ram data
                                    257 ;--------------------------------------------------------
                                    258 	.area XSEG    (XDATA)
                                    259 ;--------------------------------------------------------
                                    260 ; absolute external ram data
                                    261 ;--------------------------------------------------------
                                    262 	.area XABS    (ABS,XDATA)
                                    263 ;--------------------------------------------------------
                                    264 ; initialized external ram data
                                    265 ;--------------------------------------------------------
                                    266 	.area XISEG   (XDATA)
                                    267 	.area HOME    (CODE)
                                    268 	.area GSINIT0 (CODE)
                                    269 	.area GSINIT1 (CODE)
                                    270 	.area GSINIT2 (CODE)
                                    271 	.area GSINIT3 (CODE)
                                    272 	.area GSINIT4 (CODE)
                                    273 	.area GSINIT5 (CODE)
                                    274 	.area GSINIT  (CODE)
                                    275 	.area GSFINAL (CODE)
                                    276 	.area CSEG    (CODE)
                                    277 ;--------------------------------------------------------
                                    278 ; global & static initialisations
                                    279 ;--------------------------------------------------------
                                    280 	.area HOME    (CODE)
                                    281 	.area GSINIT  (CODE)
                                    282 	.area GSFINAL (CODE)
                                    283 	.area GSINIT  (CODE)
                                    284 ;--------------------------------------------------------
                                    285 ; Home
                                    286 ;--------------------------------------------------------
                                    287 	.area HOME    (CODE)
                                    288 	.area HOME    (CODE)
                                    289 ;--------------------------------------------------------
                                    290 ; code
                                    291 ;--------------------------------------------------------
                                    292 	.area CSEG    (CODE)
                                    293 ;------------------------------------------------------------
                                    294 ;Allocation info for local variables in function 'delay'
                                    295 ;------------------------------------------------------------
                                    296 ;i                         Allocated to registers 
                                    297 ;j                         Allocated to registers r6 r7 
                                    298 ;k                         Allocated to registers r4 r5 
                                    299 ;------------------------------------------------------------
                                    300 ;	.\spi.c:4: void delay(int i){
                                    301 ;	-----------------------------------------
                                    302 ;	 function delay
                                    303 ;	-----------------------------------------
      00057C                        304 _delay:
                           000007   305 	ar7 = 0x07
                           000006   306 	ar6 = 0x06
                           000005   307 	ar5 = 0x05
                           000004   308 	ar4 = 0x04
                           000003   309 	ar3 = 0x03
                           000002   310 	ar2 = 0x02
                           000001   311 	ar1 = 0x01
                           000000   312 	ar0 = 0x00
      00057C AE 82            [24]  313 	mov	r6, dpl
      00057E AF 83            [24]  314 	mov	r7, dph
                                    315 ;	.\spi.c:6: for (j = i; j > 0; j--)
      000580                        316 00106$:
      000580 C3               [12]  317 	clr	c
      000581 E4               [12]  318 	clr	a
      000582 9E               [12]  319 	subb	a,r6
      000583 74 80            [12]  320 	mov	a,#(0x00 ^ 0x80)
      000585 8F F0            [24]  321 	mov	b,r7
      000587 63 F0 80         [24]  322 	xrl	b,#0x80
      00058A 95 F0            [12]  323 	subb	a,b
      00058C 50 1E            [24]  324 	jnc	00108$
                                    325 ;	.\spi.c:7: for (k = 125; k > 0; k--);
      00058E 7C 7D            [12]  326 	mov	r4,#0x7d
      000590 7D 00            [12]  327 	mov	r5,#0x00
      000592                        328 00104$:
      000592 1C               [12]  329 	dec	r4
      000593 BC FF 01         [24]  330 	cjne	r4,#0xff,00137$
      000596 1D               [12]  331 	dec	r5
      000597                        332 00137$:
      000597 C3               [12]  333 	clr	c
      000598 E4               [12]  334 	clr	a
      000599 9C               [12]  335 	subb	a,r4
      00059A 74 80            [12]  336 	mov	a,#(0x00 ^ 0x80)
      00059C 8D F0            [24]  337 	mov	b,r5
      00059E 63 F0 80         [24]  338 	xrl	b,#0x80
      0005A1 95 F0            [12]  339 	subb	a,b
      0005A3 40 ED            [24]  340 	jc	00104$
                                    341 ;	.\spi.c:6: for (j = i; j > 0; j--)
      0005A5 1E               [12]  342 	dec	r6
      0005A6 BE FF 01         [24]  343 	cjne	r6,#0xff,00139$
      0005A9 1F               [12]  344 	dec	r7
      0005AA                        345 00139$:
      0005AA 80 D4            [24]  346 	sjmp	00106$
      0005AC                        347 00108$:
                                    348 ;	.\spi.c:8: }
      0005AC 22               [24]  349 	ret
                                    350 ;------------------------------------------------------------
                                    351 ;Allocation info for local variables in function 'begin'
                                    352 ;------------------------------------------------------------
                                    353 ;	.\spi.c:42: void begin(void){
                                    354 ;	-----------------------------------------
                                    355 ;	 function begin
                                    356 ;	-----------------------------------------
      0005AD                        357 _begin:
                                    358 ;	.\spi.c:43: P2_6 = 0;
                                    359 ;	assignBit
      0005AD C2 A6            [12]  360 	clr	_P2_6
                                    361 ;	.\spi.c:44: }
      0005AF 22               [24]  362 	ret
                                    363 ;------------------------------------------------------------
                                    364 ;Allocation info for local variables in function 'end'
                                    365 ;------------------------------------------------------------
                                    366 ;	.\spi.c:46: void end(void){
                                    367 ;	-----------------------------------------
                                    368 ;	 function end
                                    369 ;	-----------------------------------------
      0005B0                        370 _end:
                                    371 ;	.\spi.c:47: P2_6 = 1;
                                    372 ;	assignBit
      0005B0 D2 A6            [12]  373 	setb	_P2_6
                                    374 ;	.\spi.c:48: }
      0005B2 22               [24]  375 	ret
                                    376 ;------------------------------------------------------------
                                    377 ;Allocation info for local variables in function 'asm_shift_in_2'
                                    378 ;------------------------------------------------------------
                                    379 ;data                      Allocated to registers 
                                    380 ;------------------------------------------------------------
                                    381 ;	.\spi.c:50: void asm_shift_in_2(unsigned char data){
                                    382 ;	-----------------------------------------
                                    383 ;	 function asm_shift_in_2
                                    384 ;	-----------------------------------------
      0005B3                        385 _asm_shift_in_2:
      0005B3 85 82 E0         [24]  386 	mov	_ACC,dpl
                                    387 ;	.\spi.c:112: __endasm;
      0005B6 FF               [12]  388 	mov	r7, A
      0005B7 A2 E7            [12]  389 	mov	c, A.7
      0005B9 92 A5            [24]  390 	mov	_P2_5, c
      0005BB D2 A7            [12]  391 	setb	_P2_7
      0005BD C2 A7            [12]  392 	clr	_P2_7
      0005BF C2 A5            [12]  393 	clr	_P2_5
      0005C1 33               [12]  394 	rlc	A
      0005C2 A2 E7            [12]  395 	mov	c, A.7
      0005C4 92 A5            [24]  396 	mov	_P2_5, c
      0005C6 D2 A7            [12]  397 	setb	_P2_7
      0005C8 C2 A7            [12]  398 	clr	_P2_7
      0005CA C2 A5            [12]  399 	clr	_P2_5
      0005CC 33               [12]  400 	rlc	A
      0005CD A2 E7            [12]  401 	mov	c, A.7
      0005CF 92 A5            [24]  402 	mov	_P2_5, c
      0005D1 D2 A7            [12]  403 	setb	_P2_7
      0005D3 C2 A7            [12]  404 	clr	_P2_7
      0005D5 C2 A5            [12]  405 	clr	_P2_5
      0005D7 33               [12]  406 	rlc	A
      0005D8 A2 E7            [12]  407 	mov	c, A.7
      0005DA 92 A5            [24]  408 	mov	_P2_5, c
      0005DC D2 A7            [12]  409 	setb	_P2_7
      0005DE C2 A7            [12]  410 	clr	_P2_7
      0005E0 C2 A5            [12]  411 	clr	_P2_5
      0005E2 33               [12]  412 	rlc	A
      0005E3 A2 E7            [12]  413 	mov	c, A.7
      0005E5 92 A5            [24]  414 	mov	_P2_5, c
      0005E7 D2 A7            [12]  415 	setb	_P2_7
      0005E9 C2 A7            [12]  416 	clr	_P2_7
      0005EB C2 A5            [12]  417 	clr	_P2_5
      0005ED 33               [12]  418 	rlc	A
      0005EE A2 E7            [12]  419 	mov	c, A.7
      0005F0 92 A5            [24]  420 	mov	_P2_5, c
      0005F2 D2 A7            [12]  421 	setb	_P2_7
      0005F4 C2 A7            [12]  422 	clr	_P2_7
      0005F6 C2 A5            [12]  423 	clr	_P2_5
      0005F8 33               [12]  424 	rlc	A
      0005F9 A2 E7            [12]  425 	mov	c, A.7
      0005FB 92 A5            [24]  426 	mov	_P2_5, c
      0005FD D2 A7            [12]  427 	setb	_P2_7
      0005FF C2 A7            [12]  428 	clr	_P2_7
      000601 C2 A5            [12]  429 	clr	_P2_5
      000603 33               [12]  430 	rlc	A
      000604 A2 E7            [12]  431 	mov	c, A.7
      000606 92 A5            [24]  432 	mov	_P2_5, c
      000608 D2 A7            [12]  433 	setb	_P2_7
      00060A C2 A7            [12]  434 	clr	_P2_7
      00060C C2 A5            [12]  435 	clr	_P2_5
      00060E 33               [12]  436 	rlc	A
      00060F 22               [24]  437 	ret
                                    438 ;	.\spi.c:113: }
      000610 22               [24]  439 	ret
                                    440 ;------------------------------------------------------------
                                    441 ;Allocation info for local variables in function 'asm_shift_in'
                                    442 ;------------------------------------------------------------
                                    443 ;	.\spi.c:115: void asm_shift_in(void){
                                    444 ;	-----------------------------------------
                                    445 ;	 function asm_shift_in
                                    446 ;	-----------------------------------------
      000611                        447 _asm_shift_in:
                                    448 ;	.\spi.c:189: __endasm;
      000611 AF 82            [24]  449 	mov	r7, dpl
      000613 8F 06            [24]  450 	mov	ar6,r7
      000615 53 06 80         [24]  451 	anl	ar6,#0x80
      000618 EE               [12]  452 	mov	a,r6
      000619 24 FF            [12]  453 	add	a,#0xff
      00061B 92 A5            [24]  454 	mov	_P2_5,c
      00061D D2 A7            [12]  455 	setb	_P2_7
      00061F C2 A7            [12]  456 	clr	_P2_7
      000621 C2 A5            [12]  457 	clr	_P2_5
      000623 EF               [12]  458 	mov	a,r7
      000624 2F               [12]  459 	add	a,r7
      000625 FF               [12]  460 	mov	r7,a
      000626 54 80            [12]  461 	anl	a,#0x80
      000628 24 FF            [12]  462 	add	a,#0xff
      00062A 92 A5            [24]  463 	mov	_P2_5,c
      00062C D2 A7            [12]  464 	setb	_P2_7
      00062E C2 A7            [12]  465 	clr	_P2_7
      000630 C2 A5            [12]  466 	clr	_P2_5
      000632 EF               [12]  467 	mov	a,r7
      000633 2F               [12]  468 	add	a,r7
      000634 FF               [12]  469 	mov	r7,a
      000635 54 80            [12]  470 	anl	a,#0x80
      000637 24 FF            [12]  471 	add	a,#0xff
      000639 92 A5            [24]  472 	mov	_P2_5,c
      00063B D2 A7            [12]  473 	setb	_P2_7
      00063D C2 A7            [12]  474 	clr	_P2_7
      00063F C2 A5            [12]  475 	clr	_P2_5
      000641 EF               [12]  476 	mov	a,r7
      000642 2F               [12]  477 	add	a,r7
      000643 FF               [12]  478 	mov	r7,a
      000644 54 80            [12]  479 	anl	a,#0x80
      000646 24 FF            [12]  480 	add	a,#0xff
      000648 92 A5            [24]  481 	mov	_P2_5,c
      00064A D2 A7            [12]  482 	setb	_P2_7
      00064C C2 A7            [12]  483 	clr	_P2_7
      00064E C2 A5            [12]  484 	clr	_P2_5
      000650 EF               [12]  485 	mov	a,r7
      000651 2F               [12]  486 	add	a,r7
      000652 FF               [12]  487 	mov	r7,a
      000653 54 80            [12]  488 	anl	a,#0x80
      000655 24 FF            [12]  489 	add	a,#0xff
      000657 92 A5            [24]  490 	mov	_P2_5,c
      000659 D2 A7            [12]  491 	setb	_P2_7
      00065B C2 A7            [12]  492 	clr	_P2_7
      00065D C2 A5            [12]  493 	clr	_P2_5
      00065F EF               [12]  494 	mov	a,r7
      000660 2F               [12]  495 	add	a,r7
      000661 FF               [12]  496 	mov	r7,a
      000662 54 80            [12]  497 	anl	a,#0x80
      000664 24 FF            [12]  498 	add	a,#0xff
      000666 92 A5            [24]  499 	mov	_P2_5,c
      000668 D2 A7            [12]  500 	setb	_P2_7
      00066A C2 A7            [12]  501 	clr	_P2_7
      00066C C2 A5            [12]  502 	clr	_P2_5
      00066E EF               [12]  503 	mov	a,r7
      00066F 2F               [12]  504 	add	a,r7
      000670 FF               [12]  505 	mov	r7,a
      000671 54 80            [12]  506 	anl	a,#0x80
      000673 24 FF            [12]  507 	add	a,#0xff
      000675 92 A5            [24]  508 	mov	_P2_5,c
      000677 D2 A7            [12]  509 	setb	_P2_7
      000679 C2 A7            [12]  510 	clr	_P2_7
      00067B C2 A5            [12]  511 	clr	_P2_5
      00067D EF               [12]  512 	mov	a,r7
      00067E 2F               [12]  513 	add	a,r7
      00067F 54 80            [12]  514 	anl	a,#0x80
      000681 24 FF            [12]  515 	add	a,#0xff
      000683 92 A5            [24]  516 	mov	_P2_5,c
      000685 D2 A7            [12]  517 	setb	_P2_7
      000687 C2 A7            [12]  518 	clr	_P2_7
      000689 C2 A5            [12]  519 	clr	_P2_5
      00068B 22               [24]  520 	ret
                                    521 ;	.\spi.c:190: }
      00068C 22               [24]  522 	ret
                                    523 ;------------------------------------------------------------
                                    524 ;Allocation info for local variables in function 'asm_shift_out_2'
                                    525 ;------------------------------------------------------------
                                    526 ;	.\spi.c:192: unsigned char asm_shift_out_2(void){
                                    527 ;	-----------------------------------------
                                    528 ;	 function asm_shift_out_2
                                    529 ;	-----------------------------------------
      00068D                        530 _asm_shift_out_2:
                                    531 ;	.\spi.c:245: __endasm;
      00068D 74 00            [12]  532 	mov	A, #0
      00068F 33               [12]  533 	rlc	A
      000690 D2 A7            [12]  534 	setb	_P2_7
      000692 A2 A4            [12]  535 	mov	c, _P2_4
      000694 92 E0            [24]  536 	mov	A.0, c
      000696 C2 A7            [12]  537 	clr	_P2_7
      000698 33               [12]  538 	rlc	A
      000699 D2 A7            [12]  539 	setb	_P2_7
      00069B A2 A4            [12]  540 	mov	c, _P2_4
      00069D 92 E0            [24]  541 	mov	A.0, c
      00069F C2 A7            [12]  542 	clr	_P2_7
      0006A1 33               [12]  543 	rlc	A
      0006A2 D2 A7            [12]  544 	setb	_P2_7
      0006A4 A2 A4            [12]  545 	mov	c, _P2_4
      0006A6 92 E0            [24]  546 	mov	A.0, c
      0006A8 C2 A7            [12]  547 	clr	_P2_7
      0006AA 33               [12]  548 	rlc	A
      0006AB D2 A7            [12]  549 	setb	_P2_7
      0006AD A2 A4            [12]  550 	mov	c, _P2_4
      0006AF 92 E0            [24]  551 	mov	A.0, c
      0006B1 C2 A7            [12]  552 	clr	_P2_7
      0006B3 33               [12]  553 	rlc	A
      0006B4 D2 A7            [12]  554 	setb	_P2_7
      0006B6 A2 A4            [12]  555 	mov	c, _P2_4
      0006B8 92 E0            [24]  556 	mov	A.0, c
      0006BA C2 A7            [12]  557 	clr	_P2_7
      0006BC 33               [12]  558 	rlc	A
      0006BD D2 A7            [12]  559 	setb	_P2_7
      0006BF A2 A4            [12]  560 	mov	c, _P2_4
      0006C1 92 E0            [24]  561 	mov	A.0, c
      0006C3 C2 A7            [12]  562 	clr	_P2_7
      0006C5 33               [12]  563 	rlc	A
      0006C6 D2 A7            [12]  564 	setb	_P2_7
      0006C8 A2 A4            [12]  565 	mov	c, _P2_4
      0006CA 92 E0            [24]  566 	mov	A.0, c
      0006CC C2 A7            [12]  567 	clr	_P2_7
      0006CE 33               [12]  568 	rlc	A
      0006CF D2 A7            [12]  569 	setb	_P2_7
      0006D1 A2 A4            [12]  570 	mov	c, _P2_4
      0006D3 92 E0            [24]  571 	mov	A.0, c
      0006D5 C2 A7            [12]  572 	clr	_P2_7
      0006D7 FF               [12]  573 	mov	r7, A
                                    574 ;	.\spi.c:247: return ACC;
      0006D8 85 E0 82         [24]  575 	mov	dpl, _ACC
                                    576 ;	.\spi.c:248: }
      0006DB 22               [24]  577 	ret
                                    578 ;------------------------------------------------------------
                                    579 ;Allocation info for local variables in function 'asm_shift_out'
                                    580 ;------------------------------------------------------------
                                    581 ;	.\spi.c:249: void asm_shift_out(void){
                                    582 ;	-----------------------------------------
                                    583 ;	 function asm_shift_out
                                    584 ;	-----------------------------------------
      0006DC                        585 _asm_shift_out:
                                    586 ;	.\spi.c:332: __endasm;
      0006DC D2 A7            [12]  587 	setb	_P2_7
      0006DE A2 A4            [12]  588 	mov	c,_P2_4
      0006E0 E4               [12]  589 	clr	a
      0006E1 33               [12]  590 	rlc	a
      0006E2 FF               [12]  591 	mov	r7,a
      0006E3 C2 A7            [12]  592 	clr	_P2_7
      0006E5 EF               [12]  593 	mov	a,r7
      0006E6 2F               [12]  594 	add	a,r7
      0006E7 FF               [12]  595 	mov	r7,a
      0006E8 D2 A7            [12]  596 	setb	_P2_7
      0006EA A2 A4            [12]  597 	mov	c,_P2_4
      0006EC E4               [12]  598 	clr	a
      0006ED 33               [12]  599 	rlc	a
      0006EE FE               [12]  600 	mov	r6,a
      0006EF EF               [12]  601 	mov	a,r7
      0006F0 42 06            [12]  602 	orl	ar6,a
      0006F2 C2 A7            [12]  603 	clr	_P2_7
      0006F4 EE               [12]  604 	mov	a,r6
      0006F5 2E               [12]  605 	add	a,r6
      0006F6 FE               [12]  606 	mov	r6,a
      0006F7 D2 A7            [12]  607 	setb	_P2_7
      0006F9 A2 A4            [12]  608 	mov	c,_P2_4
      0006FB E4               [12]  609 	clr	a
      0006FC 33               [12]  610 	rlc	a
      0006FD FF               [12]  611 	mov	r7,a
      0006FE EE               [12]  612 	mov	a,r6
      0006FF 42 07            [12]  613 	orl	ar7,a
      000701 C2 A7            [12]  614 	clr	_P2_7
      000703 EF               [12]  615 	mov	a,r7
      000704 2F               [12]  616 	add	a,r7
      000705 FF               [12]  617 	mov	r7,a
      000706 D2 A7            [12]  618 	setb	_P2_7
      000708 A2 A4            [12]  619 	mov	c,_P2_4
      00070A E4               [12]  620 	clr	a
      00070B 33               [12]  621 	rlc	a
      00070C FE               [12]  622 	mov	r6,a
      00070D EF               [12]  623 	mov	a,r7
      00070E 42 06            [12]  624 	orl	ar6,a
      000710 C2 A7            [12]  625 	clr	_P2_7
      000712 EE               [12]  626 	mov	a,r6
      000713 2E               [12]  627 	add	a,r6
      000714 FE               [12]  628 	mov	r6,a
      000715 D2 A7            [12]  629 	setb	_P2_7
      000717 A2 A4            [12]  630 	mov	c,_P2_4
      000719 E4               [12]  631 	clr	a
      00071A 33               [12]  632 	rlc	a
      00071B 42 06            [12]  633 	orl	ar6,a
      00071D C2 A7            [12]  634 	clr	_P2_7
      00071F EE               [12]  635 	mov	a,r6
      000720 2E               [12]  636 	add	a,r6
      000721 FE               [12]  637 	mov	r6,a
      000722 D2 A7            [12]  638 	setb	_P2_7
      000724 A2 A4            [12]  639 	mov	c,_P2_4
      000726 E4               [12]  640 	clr	a
      000727 33               [12]  641 	rlc	a
      000728 FF               [12]  642 	mov	r7,a
      000729 EE               [12]  643 	mov	a,r6
      00072A 42 07            [12]  644 	orl	ar7,a
      00072C C2 A7            [12]  645 	clr	_P2_7
      00072E EF               [12]  646 	mov	a,r7
      00072F 2F               [12]  647 	add	a,r7
      000730 FF               [12]  648 	mov	r7,a
      000731 D2 A7            [12]  649 	setb	_P2_7
      000733 A2 A4            [12]  650 	mov	c,_P2_4
      000735 E4               [12]  651 	clr	a
      000736 33               [12]  652 	rlc	a
      000737 FE               [12]  653 	mov	r6,a
      000738 EF               [12]  654 	mov	a,r7
      000739 42 06            [12]  655 	orl	ar6,a
      00073B C2 A7            [12]  656 	clr	_P2_7
      00073D EE               [12]  657 	mov	a,r6
      00073E 2E               [12]  658 	add	a,r6
      00073F FE               [12]  659 	mov	r6,a
      000740 D2 A7            [12]  660 	setb	_P2_7
      000742 A2 A4            [12]  661 	mov	c,_P2_4
      000744 E4               [12]  662 	clr	a
      000745 33               [12]  663 	rlc	a
      000746 4E               [12]  664 	orl	a,r6
      000747 F5 82            [12]  665 	mov	dpl,a
      000749 C2 A7            [12]  666 	clr	_P2_7
      00074B 22               [24]  667 	ret
                                    668 ;	.\spi.c:333: }
      00074C 22               [24]  669 	ret
                                    670 ;------------------------------------------------------------
                                    671 ;Allocation info for local variables in function 'shift_in'
                                    672 ;------------------------------------------------------------
                                    673 ;data                      Allocated to registers r7 
                                    674 ;------------------------------------------------------------
                                    675 ;	.\spi.c:335: void shift_in(unsigned char data){
                                    676 ;	-----------------------------------------
                                    677 ;	 function shift_in
                                    678 ;	-----------------------------------------
      00074D                        679 _shift_in:
      00074D AF 82            [24]  680 	mov	r7, dpl
                                    681 ;	.\spi.c:336: P2_5 = (data & 0x80) ? 1 : 0;
      00074F 8F 06            [24]  682 	mov	ar6,r7
      000751 53 06 80         [24]  683 	anl	ar6,#0x80
                                    684 ;	assignBit
      000754 EE               [12]  685 	mov	a,r6
      000755 24 FF            [12]  686 	add	a,#0xff
      000757 92 A5            [24]  687 	mov	_P2_5,c
                                    688 ;	.\spi.c:337: P2_7 = 1;        
                                    689 ;	assignBit
      000759 D2 A7            [12]  690 	setb	_P2_7
                                    691 ;	.\spi.c:338: P2_7 = 0;
                                    692 ;	assignBit
      00075B C2 A7            [12]  693 	clr	_P2_7
                                    694 ;	.\spi.c:339: P2_5 = 0;
                                    695 ;	assignBit
      00075D C2 A5            [12]  696 	clr	_P2_5
                                    697 ;	.\spi.c:340: data <<= 1;
      00075F EF               [12]  698 	mov	a,r7
      000760 2F               [12]  699 	add	a,r7
                                    700 ;	.\spi.c:341: P2_5 = (data & 0x80) ? 1 : 0;
      000761 FF               [12]  701 	mov	r7,a
                                    702 ;	assignBit
      000762 54 80            [12]  703 	anl	a,#0x80
      000764 24 FF            [12]  704 	add	a,#0xff
      000766 92 A5            [24]  705 	mov	_P2_5,c
                                    706 ;	.\spi.c:342: P2_7 = 1;        
                                    707 ;	assignBit
      000768 D2 A7            [12]  708 	setb	_P2_7
                                    709 ;	.\spi.c:343: P2_7 = 0;
                                    710 ;	assignBit
      00076A C2 A7            [12]  711 	clr	_P2_7
                                    712 ;	.\spi.c:344: P2_5 = 0;
                                    713 ;	assignBit
      00076C C2 A5            [12]  714 	clr	_P2_5
                                    715 ;	.\spi.c:345: data <<= 1;
      00076E EF               [12]  716 	mov	a,r7
      00076F 2F               [12]  717 	add	a,r7
                                    718 ;	.\spi.c:346: P2_5 = (data & 0x80) ? 1 : 0;
      000770 FF               [12]  719 	mov	r7,a
                                    720 ;	assignBit
      000771 54 80            [12]  721 	anl	a,#0x80
      000773 24 FF            [12]  722 	add	a,#0xff
      000775 92 A5            [24]  723 	mov	_P2_5,c
                                    724 ;	.\spi.c:347: P2_7 = 1;        
                                    725 ;	assignBit
      000777 D2 A7            [12]  726 	setb	_P2_7
                                    727 ;	.\spi.c:348: P2_7 = 0;
                                    728 ;	assignBit
      000779 C2 A7            [12]  729 	clr	_P2_7
                                    730 ;	.\spi.c:349: P2_5 = 0;
                                    731 ;	assignBit
      00077B C2 A5            [12]  732 	clr	_P2_5
                                    733 ;	.\spi.c:350: data <<= 1;
      00077D EF               [12]  734 	mov	a,r7
      00077E 2F               [12]  735 	add	a,r7
                                    736 ;	.\spi.c:351: P2_5 = (data & 0x80) ? 1 : 0;
      00077F FF               [12]  737 	mov	r7,a
                                    738 ;	assignBit
      000780 54 80            [12]  739 	anl	a,#0x80
      000782 24 FF            [12]  740 	add	a,#0xff
      000784 92 A5            [24]  741 	mov	_P2_5,c
                                    742 ;	.\spi.c:352: P2_7 = 1;        
                                    743 ;	assignBit
      000786 D2 A7            [12]  744 	setb	_P2_7
                                    745 ;	.\spi.c:353: P2_7 = 0;
                                    746 ;	assignBit
      000788 C2 A7            [12]  747 	clr	_P2_7
                                    748 ;	.\spi.c:354: P2_5 = 0;
                                    749 ;	assignBit
      00078A C2 A5            [12]  750 	clr	_P2_5
                                    751 ;	.\spi.c:355: data <<= 1;
      00078C EF               [12]  752 	mov	a,r7
      00078D 2F               [12]  753 	add	a,r7
                                    754 ;	.\spi.c:356: P2_5 = (data & 0x80) ? 1 : 0;
      00078E FF               [12]  755 	mov	r7,a
                                    756 ;	assignBit
      00078F 54 80            [12]  757 	anl	a,#0x80
      000791 24 FF            [12]  758 	add	a,#0xff
      000793 92 A5            [24]  759 	mov	_P2_5,c
                                    760 ;	.\spi.c:357: P2_7 = 1;        
                                    761 ;	assignBit
      000795 D2 A7            [12]  762 	setb	_P2_7
                                    763 ;	.\spi.c:358: P2_7 = 0;
                                    764 ;	assignBit
      000797 C2 A7            [12]  765 	clr	_P2_7
                                    766 ;	.\spi.c:359: P2_5 = 0;
                                    767 ;	assignBit
      000799 C2 A5            [12]  768 	clr	_P2_5
                                    769 ;	.\spi.c:360: data <<= 1;
      00079B EF               [12]  770 	mov	a,r7
      00079C 2F               [12]  771 	add	a,r7
                                    772 ;	.\spi.c:361: P2_5 = (data & 0x80) ? 1 : 0;
      00079D FF               [12]  773 	mov	r7,a
                                    774 ;	assignBit
      00079E 54 80            [12]  775 	anl	a,#0x80
      0007A0 24 FF            [12]  776 	add	a,#0xff
      0007A2 92 A5            [24]  777 	mov	_P2_5,c
                                    778 ;	.\spi.c:362: P2_7 = 1;        
                                    779 ;	assignBit
      0007A4 D2 A7            [12]  780 	setb	_P2_7
                                    781 ;	.\spi.c:363: P2_7 = 0;
                                    782 ;	assignBit
      0007A6 C2 A7            [12]  783 	clr	_P2_7
                                    784 ;	.\spi.c:364: P2_5 = 0;
                                    785 ;	assignBit
      0007A8 C2 A5            [12]  786 	clr	_P2_5
                                    787 ;	.\spi.c:365: data <<= 1;
      0007AA EF               [12]  788 	mov	a,r7
      0007AB 2F               [12]  789 	add	a,r7
                                    790 ;	.\spi.c:366: P2_5 = (data & 0x80) ? 1 : 0;
      0007AC FF               [12]  791 	mov	r7,a
                                    792 ;	assignBit
      0007AD 54 80            [12]  793 	anl	a,#0x80
      0007AF 24 FF            [12]  794 	add	a,#0xff
      0007B1 92 A5            [24]  795 	mov	_P2_5,c
                                    796 ;	.\spi.c:367: P2_7 = 1;        
                                    797 ;	assignBit
      0007B3 D2 A7            [12]  798 	setb	_P2_7
                                    799 ;	.\spi.c:368: P2_7 = 0;
                                    800 ;	assignBit
      0007B5 C2 A7            [12]  801 	clr	_P2_7
                                    802 ;	.\spi.c:369: P2_5 = 0;
                                    803 ;	assignBit
      0007B7 C2 A5            [12]  804 	clr	_P2_5
                                    805 ;	.\spi.c:370: data <<= 1;
      0007B9 EF               [12]  806 	mov	a,r7
      0007BA 2F               [12]  807 	add	a,r7
                                    808 ;	.\spi.c:371: P2_5 = (data & 0x80) ? 1 : 0;
                                    809 ;	assignBit
      0007BB 54 80            [12]  810 	anl	a,#0x80
      0007BD 24 FF            [12]  811 	add	a,#0xff
      0007BF 92 A5            [24]  812 	mov	_P2_5,c
                                    813 ;	.\spi.c:372: P2_7 = 1;        
                                    814 ;	assignBit
      0007C1 D2 A7            [12]  815 	setb	_P2_7
                                    816 ;	.\spi.c:373: P2_7 = 0;
                                    817 ;	assignBit
      0007C3 C2 A7            [12]  818 	clr	_P2_7
                                    819 ;	.\spi.c:374: P2_5 = 0;
                                    820 ;	assignBit
      0007C5 C2 A5            [12]  821 	clr	_P2_5
                                    822 ;	.\spi.c:375: data <<= 1;
                                    823 ;	.\spi.c:376: }
      0007C7 22               [24]  824 	ret
                                    825 ;------------------------------------------------------------
                                    826 ;Allocation info for local variables in function 'shift_out'
                                    827 ;------------------------------------------------------------
                                    828 ;data                      Allocated to registers r6 
                                    829 ;------------------------------------------------------------
                                    830 ;	.\spi.c:378: unsigned char shift_out(void){
                                    831 ;	-----------------------------------------
                                    832 ;	 function shift_out
                                    833 ;	-----------------------------------------
      0007C8                        834 _shift_out:
                                    835 ;	.\spi.c:381: P2_7 = 1;
                                    836 ;	assignBit
      0007C8 D2 A7            [12]  837 	setb	_P2_7
                                    838 ;	.\spi.c:382: data |= P2_4;
      0007CA A2 A4            [12]  839 	mov	c,_P2_4
      0007CC E4               [12]  840 	clr	a
      0007CD 33               [12]  841 	rlc	a
      0007CE FF               [12]  842 	mov	r7,a
                                    843 ;	.\spi.c:383: P2_7 = 0;
                                    844 ;	assignBit
      0007CF C2 A7            [12]  845 	clr	_P2_7
                                    846 ;	.\spi.c:384: data <<= 1;
      0007D1 EF               [12]  847 	mov	a,r7
      0007D2 2F               [12]  848 	add	a,r7
      0007D3 FF               [12]  849 	mov	r7,a
                                    850 ;	.\spi.c:385: P2_7 = 1;
                                    851 ;	assignBit
      0007D4 D2 A7            [12]  852 	setb	_P2_7
                                    853 ;	.\spi.c:386: data |= P2_4;
      0007D6 A2 A4            [12]  854 	mov	c,_P2_4
      0007D8 E4               [12]  855 	clr	a
      0007D9 33               [12]  856 	rlc	a
      0007DA FE               [12]  857 	mov	r6,a
      0007DB EF               [12]  858 	mov	a,r7
      0007DC 42 06            [12]  859 	orl	ar6,a
                                    860 ;	.\spi.c:387: P2_7 = 0;
                                    861 ;	assignBit
      0007DE C2 A7            [12]  862 	clr	_P2_7
                                    863 ;	.\spi.c:388: data <<= 1;
      0007E0 EE               [12]  864 	mov	a,r6
      0007E1 2E               [12]  865 	add	a,r6
      0007E2 FE               [12]  866 	mov	r6,a
                                    867 ;	.\spi.c:389: P2_7 = 1;
                                    868 ;	assignBit
      0007E3 D2 A7            [12]  869 	setb	_P2_7
                                    870 ;	.\spi.c:390: data |= P2_4;
      0007E5 A2 A4            [12]  871 	mov	c,_P2_4
      0007E7 E4               [12]  872 	clr	a
      0007E8 33               [12]  873 	rlc	a
      0007E9 FF               [12]  874 	mov	r7,a
      0007EA EE               [12]  875 	mov	a,r6
      0007EB 42 07            [12]  876 	orl	ar7,a
                                    877 ;	.\spi.c:391: P2_7 = 0;
                                    878 ;	assignBit
      0007ED C2 A7            [12]  879 	clr	_P2_7
                                    880 ;	.\spi.c:392: data <<= 1;
      0007EF EF               [12]  881 	mov	a,r7
      0007F0 2F               [12]  882 	add	a,r7
      0007F1 FF               [12]  883 	mov	r7,a
                                    884 ;	.\spi.c:393: P2_7 = 1;
                                    885 ;	assignBit
      0007F2 D2 A7            [12]  886 	setb	_P2_7
                                    887 ;	.\spi.c:394: data |= P2_4;
      0007F4 A2 A4            [12]  888 	mov	c,_P2_4
      0007F6 E4               [12]  889 	clr	a
      0007F7 33               [12]  890 	rlc	a
      0007F8 FE               [12]  891 	mov	r6,a
      0007F9 EF               [12]  892 	mov	a,r7
      0007FA 42 06            [12]  893 	orl	ar6,a
                                    894 ;	.\spi.c:395: P2_7 = 0;
                                    895 ;	assignBit
      0007FC C2 A7            [12]  896 	clr	_P2_7
                                    897 ;	.\spi.c:396: data <<= 1;
      0007FE EE               [12]  898 	mov	a,r6
      0007FF 2E               [12]  899 	add	a,r6
      000800 FE               [12]  900 	mov	r6,a
                                    901 ;	.\spi.c:397: P2_7 = 1;
                                    902 ;	assignBit
      000801 D2 A7            [12]  903 	setb	_P2_7
                                    904 ;	.\spi.c:398: data |= P2_4;
      000803 A2 A4            [12]  905 	mov	c,_P2_4
      000805 E4               [12]  906 	clr	a
      000806 33               [12]  907 	rlc	a
      000807 42 06            [12]  908 	orl	ar6,a
                                    909 ;	.\spi.c:399: P2_7 = 0;
                                    910 ;	assignBit
      000809 C2 A7            [12]  911 	clr	_P2_7
                                    912 ;	.\spi.c:400: data <<= 1;
      00080B EE               [12]  913 	mov	a,r6
      00080C 2E               [12]  914 	add	a,r6
      00080D FE               [12]  915 	mov	r6,a
                                    916 ;	.\spi.c:401: P2_7 = 1;
                                    917 ;	assignBit
      00080E D2 A7            [12]  918 	setb	_P2_7
                                    919 ;	.\spi.c:402: data |= P2_4;
      000810 A2 A4            [12]  920 	mov	c,_P2_4
      000812 E4               [12]  921 	clr	a
      000813 33               [12]  922 	rlc	a
      000814 FF               [12]  923 	mov	r7,a
      000815 EE               [12]  924 	mov	a,r6
      000816 42 07            [12]  925 	orl	ar7,a
                                    926 ;	.\spi.c:403: P2_7 = 0;
                                    927 ;	assignBit
      000818 C2 A7            [12]  928 	clr	_P2_7
                                    929 ;	.\spi.c:404: data <<= 1;
      00081A EF               [12]  930 	mov	a,r7
      00081B 2F               [12]  931 	add	a,r7
      00081C FF               [12]  932 	mov	r7,a
                                    933 ;	.\spi.c:405: P2_7 = 1;
                                    934 ;	assignBit
      00081D D2 A7            [12]  935 	setb	_P2_7
                                    936 ;	.\spi.c:406: data |= P2_4;
      00081F A2 A4            [12]  937 	mov	c,_P2_4
      000821 E4               [12]  938 	clr	a
      000822 33               [12]  939 	rlc	a
      000823 FE               [12]  940 	mov	r6,a
      000824 EF               [12]  941 	mov	a,r7
      000825 42 06            [12]  942 	orl	ar6,a
                                    943 ;	.\spi.c:407: P2_7 = 0;
                                    944 ;	assignBit
      000827 C2 A7            [12]  945 	clr	_P2_7
                                    946 ;	.\spi.c:408: data <<= 1;
      000829 EE               [12]  947 	mov	a,r6
      00082A 2E               [12]  948 	add	a,r6
      00082B FE               [12]  949 	mov	r6,a
                                    950 ;	.\spi.c:409: P2_7 = 1;
                                    951 ;	assignBit
      00082C D2 A7            [12]  952 	setb	_P2_7
                                    953 ;	.\spi.c:410: data |= P2_4;
      00082E A2 A4            [12]  954 	mov	c,_P2_4
      000830 E4               [12]  955 	clr	a
      000831 33               [12]  956 	rlc	a
      000832 4E               [12]  957 	orl	a,r6
      000833 F5 82            [12]  958 	mov	dpl,a
                                    959 ;	.\spi.c:411: P2_7 = 0;
                                    960 ;	assignBit
      000835 C2 A7            [12]  961 	clr	_P2_7
                                    962 ;	.\spi.c:412: return data;
                                    963 ;	.\spi.c:413: }
      000837 22               [24]  964 	ret
                                    965 	.area CSEG    (CODE)
                                    966 	.area CONST   (CODE)
                                    967 	.area XINIT   (CODE)
                                    968 	.area CABS    (ABS,CODE)
